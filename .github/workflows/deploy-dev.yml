name: Deploy Development

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '20'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get CDK outputs from existing stacks
        id: get-outputs
        run: |
          # Get API URL from base infrastructure stack
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name BaseInfraStack \
            --query "Stacks[0].Outputs[?OutputKey=='ApiGatewayUrl'].OutputValue" \
            --output text)
          echo "API_URL=$API_URL" >> $GITHUB_OUTPUT

      - name: Build web application
        run: |
          cd packages/web

          # Create .env file for preview build
          cat > .env << EOF
          VITE_API_URL=${{ steps.get-outputs.outputs.API_URL }}
          VITE_COGNITO_USER_POOL_ID=${{ secrets.COGNITO_USER_POOL_ID }}
          VITE_COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
          VITE_COGNITO_DOMAIN=${{ secrets.COGNITO_DOMAIN }}
          VITE_REDIRECT_SIGN_IN=http://localhost:3001/
          VITE_REDIRECT_SIGN_OUT=http://localhost:3001/
          EOF

          # Build the application
          pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-build-${{ github.sha }}
          path: packages/web/dist/
          retention-days: 7

      - name: Comment PR with build info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Preview build completed successfully!
              
              Build artifacts are available as a GitHub Actions artifact.
              
              To test locally:
              1. Download the artifacts from this workflow run
              2. Serve the files locally using a web server
              
              Commit: \`${context.sha.substring(0, 7)}\`
              `
            })
